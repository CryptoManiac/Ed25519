<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{AE28FD14-7985-4707-A963-C94B8597AE50}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>Chaos.NaCl</RootNamespace>
    <AssemblyName>Chaos.NaCl</AssemblyName>
    <TargetFrameworkVersion>v4.5.2</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <TargetFrameworkProfile>
    </TargetFrameworkProfile>
    <CodeContractsAssemblyMode>1</CodeContractsAssemblyMode>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <RunCodeAnalysis>true</RunCodeAnalysis>
    <CodeAnalysisRuleSet>ExtendedCorrectnessRules.ruleset</CodeAnalysisRuleSet>
    <Prefer32Bit>false</Prefer32Bit>
    <CodeContractsEnableRuntimeChecking>True</CodeContractsEnableRuntimeChecking>
    <CodeContractsRuntimeOnlyPublicSurface>False</CodeContractsRuntimeOnlyPublicSurface>
    <CodeContractsRuntimeThrowOnFailure>True</CodeContractsRuntimeThrowOnFailure>
    <CodeContractsRuntimeCallSiteRequires>False</CodeContractsRuntimeCallSiteRequires>
    <CodeContractsRuntimeSkipQuantifiers>False</CodeContractsRuntimeSkipQuantifiers>
    <CodeContractsRunCodeAnalysis>True</CodeContractsRunCodeAnalysis>
    <CodeContractsNonNullObligations>True</CodeContractsNonNullObligations>
    <CodeContractsBoundsObligations>True</CodeContractsBoundsObligations>
    <CodeContractsArithmeticObligations>True</CodeContractsArithmeticObligations>
    <CodeContractsEnumObligations>True</CodeContractsEnumObligations>
    <CodeContractsRedundantAssumptions>True</CodeContractsRedundantAssumptions>
    <CodeContractsAssertsToContractsCheckBox>True</CodeContractsAssertsToContractsCheckBox>
    <CodeContractsRedundantTests>True</CodeContractsRedundantTests>
    <CodeContractsMissingPublicRequiresAsWarnings>True</CodeContractsMissingPublicRequiresAsWarnings>
    <CodeContractsMissingPublicEnsuresAsWarnings>False</CodeContractsMissingPublicEnsuresAsWarnings>
    <CodeContractsInferRequires>True</CodeContractsInferRequires>
    <CodeContractsInferEnsures>False</CodeContractsInferEnsures>
    <CodeContractsInferEnsuresAutoProperties>True</CodeContractsInferEnsuresAutoProperties>
    <CodeContractsInferObjectInvariants>False</CodeContractsInferObjectInvariants>
    <CodeContractsSuggestAssumptions>False</CodeContractsSuggestAssumptions>
    <CodeContractsSuggestAssumptionsForCallees>False</CodeContractsSuggestAssumptionsForCallees>
    <CodeContractsSuggestRequires>False</CodeContractsSuggestRequires>
    <CodeContractsNecessaryEnsures>True</CodeContractsNecessaryEnsures>
    <CodeContractsSuggestObjectInvariants>False</CodeContractsSuggestObjectInvariants>
    <CodeContractsSuggestReadonly>True</CodeContractsSuggestReadonly>
    <CodeContractsRunInBackground>True</CodeContractsRunInBackground>
    <CodeContractsShowSquigglies>True</CodeContractsShowSquigglies>
    <CodeContractsUseBaseLine>False</CodeContractsUseBaseLine>
    <CodeContractsEmitXMLDocs>False</CodeContractsEmitXMLDocs>
    <CodeContractsCustomRewriterAssembly />
    <CodeContractsCustomRewriterClass />
    <CodeContractsLibPaths />
    <CodeContractsExtraRewriteOptions />
    <CodeContractsExtraAnalysisOptions />
    <CodeContractsSQLServerOption />
    <CodeContractsBaseLineFile />
    <CodeContractsCacheAnalysisResults>True</CodeContractsCacheAnalysisResults>
    <CodeContractsSkipAnalysisIfCannotConnectToCache>False</CodeContractsSkipAnalysisIfCannotConnectToCache>
    <CodeContractsFailBuildOnWarnings>False</CodeContractsFailBuildOnWarnings>
    <CodeContractsBeingOptimisticOnExternal>True</CodeContractsBeingOptimisticOnExternal>
    <CodeContractsRuntimeCheckingLevel>Full</CodeContractsRuntimeCheckingLevel>
    <CodeContractsReferenceAssembly>%28none%29</CodeContractsReferenceAssembly>
    <CodeContractsAnalysisWarningLevel>3</CodeContractsAnalysisWarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <LangVersion>default</LangVersion>
    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
    <Prefer32Bit>false</Prefer32Bit>
    <CodeContractsEnableRuntimeChecking>True</CodeContractsEnableRuntimeChecking>
    <CodeContractsRuntimeOnlyPublicSurface>False</CodeContractsRuntimeOnlyPublicSurface>
    <CodeContractsRuntimeThrowOnFailure>True</CodeContractsRuntimeThrowOnFailure>
    <CodeContractsRuntimeCallSiteRequires>False</CodeContractsRuntimeCallSiteRequires>
    <CodeContractsRuntimeSkipQuantifiers>False</CodeContractsRuntimeSkipQuantifiers>
    <CodeContractsRunCodeAnalysis>True</CodeContractsRunCodeAnalysis>
    <CodeContractsNonNullObligations>True</CodeContractsNonNullObligations>
    <CodeContractsBoundsObligations>True</CodeContractsBoundsObligations>
    <CodeContractsArithmeticObligations>True</CodeContractsArithmeticObligations>
    <CodeContractsEnumObligations>True</CodeContractsEnumObligations>
    <CodeContractsRedundantAssumptions>True</CodeContractsRedundantAssumptions>
    <CodeContractsAssertsToContractsCheckBox>True</CodeContractsAssertsToContractsCheckBox>
    <CodeContractsRedundantTests>True</CodeContractsRedundantTests>
    <CodeContractsMissingPublicRequiresAsWarnings>True</CodeContractsMissingPublicRequiresAsWarnings>
    <CodeContractsMissingPublicEnsuresAsWarnings>False</CodeContractsMissingPublicEnsuresAsWarnings>
    <CodeContractsInferRequires>True</CodeContractsInferRequires>
    <CodeContractsInferEnsures>False</CodeContractsInferEnsures>
    <CodeContractsInferEnsuresAutoProperties>True</CodeContractsInferEnsuresAutoProperties>
    <CodeContractsInferObjectInvariants>False</CodeContractsInferObjectInvariants>
    <CodeContractsSuggestAssumptions>False</CodeContractsSuggestAssumptions>
    <CodeContractsSuggestAssumptionsForCallees>False</CodeContractsSuggestAssumptionsForCallees>
    <CodeContractsSuggestRequires>False</CodeContractsSuggestRequires>
    <CodeContractsNecessaryEnsures>True</CodeContractsNecessaryEnsures>
    <CodeContractsSuggestObjectInvariants>False</CodeContractsSuggestObjectInvariants>
    <CodeContractsSuggestReadonly>True</CodeContractsSuggestReadonly>
    <CodeContractsRunInBackground>True</CodeContractsRunInBackground>
    <CodeContractsShowSquigglies>True</CodeContractsShowSquigglies>
    <CodeContractsUseBaseLine>False</CodeContractsUseBaseLine>
    <CodeContractsEmitXMLDocs>False</CodeContractsEmitXMLDocs>
    <CodeContractsCustomRewriterAssembly />
    <CodeContractsCustomRewriterClass />
    <CodeContractsLibPaths />
    <CodeContractsExtraRewriteOptions />
    <CodeContractsExtraAnalysisOptions />
    <CodeContractsSQLServerOption>%28LocalDb%29\MSSQLLocalDB</CodeContractsSQLServerOption>
    <CodeContractsBaseLineFile />
    <CodeContractsCacheAnalysisResults>True</CodeContractsCacheAnalysisResults>
    <CodeContractsSkipAnalysisIfCannotConnectToCache>False</CodeContractsSkipAnalysisIfCannotConnectToCache>
    <CodeContractsFailBuildOnWarnings>False</CodeContractsFailBuildOnWarnings>
    <CodeContractsBeingOptimisticOnExternal>True</CodeContractsBeingOptimisticOnExternal>
    <CodeContractsRuntimeCheckingLevel>Full</CodeContractsRuntimeCheckingLevel>
    <CodeContractsReferenceAssembly>Build</CodeContractsReferenceAssembly>
    <CodeContractsAnalysisWarningLevel>0</CodeContractsAnalysisWarningLevel>
  </PropertyGroup>
  <PropertyGroup>
    <SignAssembly>false</SignAssembly>
  </PropertyGroup>
  <ItemGroup>
    <Compile Include="Internal\Array8.cs" />
    <Compile Include="Internal\ByteIntegerConverter.cs" />
    <Compile Include="CryptoBytes.cs" />
    <Compile Include="Internal\Ed25519Ref10\fe_cswap.cs" />
    <Compile Include="Internal\Ed25519Ref10\fe_mul121666.cs" />
    <Compile Include="Internal\Ed25519Ref10\scalarmult.cs" />
    <Compile Include="Internal\Ed25519Ref10\sc_clamp.cs" />
    <Compile Include="Internal\Sha512Internal.cs" />
    <Compile Include="Ed25519.cs" />
    <Compile Include="Internal\Ed25519Ref10\base.cs" />
    <Compile Include="Internal\Ed25519Ref10\base2.cs" />
    <Compile Include="Internal\Ed25519Ref10\d.cs" />
    <Compile Include="Internal\Ed25519Ref10\d2.cs" />
    <Compile Include="Internal\Ed25519Ref10\fe_0.cs" />
    <Compile Include="Internal\Ed25519Ref10\fe_1.cs" />
    <Compile Include="Internal\Ed25519Ref10\fe_add.cs" />
    <Compile Include="Internal\Ed25519Ref10\fe_cmov.cs" />
    <Compile Include="Internal\Ed25519Ref10\fe_frombytes.cs" />
    <Compile Include="Internal\Ed25519Ref10\fe_invert.cs" />
    <Compile Include="Internal\Ed25519Ref10\fe_isnegative.cs" />
    <Compile Include="Internal\Ed25519Ref10\fe_isnonzero.cs" />
    <Compile Include="Internal\Ed25519Ref10\fe_mul.cs" />
    <Compile Include="Internal\Ed25519Ref10\fe_neg.cs" />
    <Compile Include="Internal\Ed25519Ref10\fe_pow22523.cs" />
    <Compile Include="Internal\Ed25519Ref10\fe_sq.cs" />
    <Compile Include="Internal\Ed25519Ref10\fe_sq2.cs" />
    <Compile Include="Internal\Ed25519Ref10\fe_sub.cs" />
    <Compile Include="Internal\Ed25519Ref10\fe_tobytes.cs" />
    <Compile Include="Internal\Ed25519Ref10\FieldElement.cs" />
    <Compile Include="Internal\Ed25519Ref10\ge_add.cs" />
    <Compile Include="Internal\Ed25519Ref10\ge_double_scalarmult.cs" />
    <Compile Include="Internal\Ed25519Ref10\ge_frombytes.cs" />
    <Compile Include="Internal\Ed25519Ref10\ge_madd.cs" />
    <Compile Include="Internal\Ed25519Ref10\ge_msub.cs" />
    <Compile Include="Internal\Ed25519Ref10\ge_p1p1_to_p2.cs" />
    <Compile Include="Internal\Ed25519Ref10\ge_p1p1_to_p3.cs" />
    <Compile Include="Internal\Ed25519Ref10\ge_p2_0.cs" />
    <Compile Include="Internal\Ed25519Ref10\ge_p2_dbl.cs" />
    <Compile Include="Internal\Ed25519Ref10\ge_p3_0.cs" />
    <Compile Include="Internal\Ed25519Ref10\ge_p3_dbl.cs" />
    <Compile Include="Internal\Ed25519Ref10\ge_p3_tobytes.cs" />
    <Compile Include="Internal\Ed25519Ref10\ge_p3_to_cached.cs" />
    <Compile Include="Internal\Ed25519Ref10\ge_p3_to_p2.cs" />
    <Compile Include="Internal\Ed25519Ref10\ge_precomp_0.cs" />
    <Compile Include="Internal\Ed25519Ref10\ge_scalarmult_base.cs" />
    <Compile Include="Internal\Ed25519Ref10\ge_sub.cs" />
    <Compile Include="Internal\Ed25519Ref10\ge_tobytes.cs" />
    <Compile Include="Internal\Ed25519Ref10\GroupElement.cs" />
    <Compile Include="Internal\Ed25519Ref10\keypair.cs" />
    <Compile Include="Internal\Ed25519Ref10\open.cs" />
    <Compile Include="Internal\Ed25519Ref10\sc_mul_add.cs" />
    <Compile Include="Internal\Ed25519Ref10\sc_reduce.cs" />
    <Compile Include="Internal\Ed25519Ref10\sign.cs" />
    <Compile Include="Internal\Ed25519Ref10\sqrtm1.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="Internal\Array16.cs" />
    <Compile Include="Properties\AssemblyInfoFull.cs" />
    <Compile Include="Sha512.cs" />
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>